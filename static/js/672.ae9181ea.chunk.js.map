{"version":3,"file":"static/js/672.ae9181ea.chunk.js","mappings":"2JACA,SAAgB,QAAU,yBAAyB,eAAiB,gCAAgC,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,qBCG7N,MAWA,EAXoBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEK,WAAWC,IAAI,iEACjCF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAIZ,EAAKO,SAAER,EAAMc,SACxB,ECHd,EANiBd,IAETS,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEU,QAAQP,SAAER,EAAMe,UCuC1C,EAvCiBf,IAEb,IAAIgB,EAAQhB,EAAMiB,YACdC,EAAkBF,EAAMG,QAAQC,KAAId,IAAUG,EAAAA,EAAAA,KAACY,EAAU,CAACP,KAAMR,EAAOQ,KAAsBZ,GAAII,EAAOJ,IAAtBI,EAAOJ,MACzFoB,EAAmBN,EAAMO,SAASH,KAAIL,IAAWN,EAAAA,EAAAA,KAACe,EAAO,CAACT,QAAUA,EAAQA,SAAcA,EAAQb,MAClGuB,EAAiBT,EAAMS,eAW3B,OACItB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEc,QAAQX,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEqB,eAAelB,SAC5BU,KAELf,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEkB,SAASf,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAAD,SAAMc,KACNnB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,YAAUkB,SAdJC,IACtB,IAAIC,EAAOD,EAAME,OAAOC,MACxB/B,EAAMgC,qBAAqBH,EAAK,EAaNE,MAAON,EACPQ,YAAY,0BAG1BxB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQyB,QAxBXC,KACbnC,EAAMoC,aAAa,EAuByB5B,SAAC,2BAIvC,E,aCjCd,MAMA,GAAe6B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAPqBtB,IACd,CACHC,YAAaD,EAAMC,eAKE,CAACmB,YAAW,KAAEJ,qBAAoB,OAC3DO,EAAAA,EAFJ,CAEsBC,E,yECVtB,IAAIC,EAA2BzB,IAAK,CAChC0B,OAAQ1B,EAAM2B,KAAKD,SAGhB,MAAMH,EAAoBK,IAC7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAIC,KAAKhD,MAAM0C,QACRjC,EAAAA,EAAAA,KAACmC,EAAS,IAAKI,KAAKhD,SADGS,EAAAA,EAAAA,KAACwC,EAAAA,GAAQ,CAACpC,GAAI,UAEhD,EAGJ,OAD0ByB,EAAAA,EAAAA,IAAQG,EAARH,CAAiCO,EACjC,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogs__items\":\"Dialogs_dialogs__items__+PnPC\",\"dialog_img\":\"Dialogs_dialog_img__Drjzz\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import c from './../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom';\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id\n    \n    return (\n        <div className={c.dialog + ' ' + c.active}>\n            <img className={c.dialog_img}src='https://avatarzo.ru/wp-content/uploads/squid-game-anime.jpg'></img>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import c from './../Dialogs.module.css'\n\nconst Message = (props) => {\n    return (\n        <div className={c.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\n\nconst Dialogs = (props) => {\n    \n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\n    let messagesElements = state.messages.map(message => <Message message ={message.message} key={message.id}/>);\n    let newMassageBody = state.newMassageBody;\n\n    let addMassage = () => {\n        props.sendMassage()\n    };\n\n    let onNewMassageChange = (event) => {\n        let body = event.target.value\n        props.updateNewMassageBody(body)\n    };\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogs__items}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>{messagesElements}</div>\n                <div>\n                    <div>\n                        <textarea onChange={onNewMassageChange} \n                                  value={newMassageBody} \n                                  placeholder='Enter your message'>\n                        </textarea>\n                    </div>\n                    <div>\n                        <button onClick={addMassage}>Send massage</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { sendMassage, updateNewMassageBody } from '../../redux/dialogs_reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {sendMassage, updateNewMassageBody}),\n    withAuthRedirect)(Dialogs);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nlet mapStateToPropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectAuthRedirect = connect(mapStateToPropsRedirect)(RedirectComponent)\n    return ConnectAuthRedirect\n};\n"],"names":["props","path","id","_jsxs","className","c","dialog","active","children","_jsx","dialog_img","src","NavLink","to","name","message","state","dialogsPage","dialogsElements","dialogs","map","DialogItem","messagesElements","messages","Message","newMassageBody","dialogs__items","onChange","event","body","target","value","updateNewMassageBody","placeholder","onClick","addMassage","sendMassage","compose","connect","withAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}